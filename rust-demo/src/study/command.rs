// Rust 输出到命令行

pub fn run() {
    let a = 12;
    println!("a is {}", a);
    // 如果我想把 a 输出两遍 在 {} 之间可以放一个数字，它将把之后的可变参数当作一个数组来访问，下标从 0 开始
    println!("a is {0}, a again is {0}", a);
    // 如果要输出 { 或 } 怎么办呢？格式字符串中通过 {{ 和 }} 分别转义代表 { 和 }。但是其他常用转义字符与 C 语言里的转义字符一样，都是反斜杠开头的形式
    println!("{{}}");
}

